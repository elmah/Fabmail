#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elmah.Fabmail
{
    
    #line 1 "..\..\ErrorMailHtmlPage.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class ErrorMailHtmlPage : Elmah.Fabmail.WebTemplateBase
    {
#line hidden

        public override void Execute()
        {



            
            #line 3 "..\..\ErrorMailHtmlPage.cshtml"
  
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    //    http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    //

    // NB cast is not really required, but aids with intellisense!
    var error = (Error) this.Error;
    const string fontStyle = @"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: x-small;";


            
            #line default
            #line hidden
WriteLiteral("<html>\r\n    <head>\r\n        <title>Error: ");


            
            #line 24 "..\..\ErrorMailHtmlPage.cshtml"
                 Write(error.Message);

            
            #line default
            #line hidden
WriteLiteral("</title>\r\n    </head>\r\n<body style=\"");


            
            #line 26 "..\..\ErrorMailHtmlPage.cshtml"
        Write(fontStyle);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n    <p id=\"message\" style=\"font-size: medium; color: maroon;\">");


            
            #line 27 "..\..\ErrorMailHtmlPage.cshtml"
                                                         Write(error.Type);

            
            #line default
            #line hidden
WriteLiteral(": ");


            
            #line 27 "..\..\ErrorMailHtmlPage.cshtml"
                                                                      Write(error.Message);

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");


            
            #line 28 "..\..\ErrorMailHtmlPage.cshtml"
     if (error.Time != DateTime.MinValue)
    {
        var tzs =
            from id in Options.TimeZoneIds
            where !string.IsNullOrEmpty(id)
            select TimeZoneInfo.FindSystemTimeZoneById(id) into tz
            where tz != null
            let time = TimeZoneInfo.ConvertTime(new DateTimeOffset(error.Time.ToUniversalTime()), tz)
            select new
            {
                Name = tz.SupportsDaylightSavingTime && tz.IsDaylightSavingTime(time) ? tz.DaylightName : tz.DaylightName,
                Time = time.ToString("ddd, dd MMM yyyy HH:mm:ss zzzz"),
            };

        var tza = tzs.ToArray();
        if (tza.Length == 0)
        {

            
            #line default
            #line hidden
WriteLiteral("            <p>Generated: ");


            
            #line 45 "..\..\ErrorMailHtmlPage.cshtml"
                     Write(error.Time.ToUniversalTime().ToString("r"));

            
            #line default
            #line hidden
WriteLiteral("</p>\r\n");


            
            #line 46 "..\..\ErrorMailHtmlPage.cshtml"
        }
        else if (tza.Length == 1)
        {

            
            #line default
            #line hidden
WriteLiteral("            <p>Generated: ");


            
            #line 49 "..\..\ErrorMailHtmlPage.cshtml"
                     Write(tza[0].Time);

            
            #line default
            #line hidden
WriteLiteral(" (");


            
            #line 49 "..\..\ErrorMailHtmlPage.cshtml"
                                    Write(tza[0].Name);

            
            #line default
            #line hidden
WriteLiteral(")</p>\r\n");


            
            #line 50 "..\..\ErrorMailHtmlPage.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <p>Generated:</p>\r\n");




            
            #line 54 "..\..\ErrorMailHtmlPage.cshtml"
WriteLiteral("            <ul>");

            
            #line default
            #line hidden
            
            #line 54 "..\..\ErrorMailHtmlPage.cshtml"
                 foreach (var tz in tzs) {
            
            #line default
            #line hidden
WriteLiteral(" <li>");


            
            #line 54 "..\..\ErrorMailHtmlPage.cshtml"
                                          Write(tz.Time);

            
            #line default
            #line hidden
WriteLiteral(" (");


            
            #line 54 "..\..\ErrorMailHtmlPage.cshtml"
                                                     Write(tz.Name);

            
            #line default
            #line hidden
WriteLiteral(")</li> ");


            
            #line 54 "..\..\ErrorMailHtmlPage.cshtml"
                                                                          }
            
            #line default
            #line hidden
WriteLiteral("</ul>\r\n");


            
            #line 55 "..\..\ErrorMailHtmlPage.cshtml"
        }
    }

            
            #line default
            #line hidden

            
            #line 57 "..\..\ErrorMailHtmlPage.cshtml"
     if (!string.IsNullOrEmpty(ErrorLogEntry?.Id))
    {
        var url = TryGetErrorDetailUrl();

            
            #line default
            #line hidden
WriteLiteral("        <p>\r\n            This error was logged using <strong>");


            
            #line 61 "..\..\ErrorMailHtmlPage.cshtml"
                                           Write(ErrorLogEntry.Log.Name);

            
            #line default
            #line hidden
WriteLiteral("</strong>\r\n            with the identifier\r\n            ");




            
            #line 64 "..\..\ErrorMailHtmlPage.cshtml"
                                                                        WriteLiteral("\r\n            <strong id=\"log-id\">");

            
            #line default
            #line hidden
            
            #line 65 "..\..\ErrorMailHtmlPage.cshtml"
                                 if (url != null) {
            
            #line default
            #line hidden
WriteLiteral("<a href=\"");


            
            #line 65 "..\..\ErrorMailHtmlPage.cshtml"
                                                       Write(url.OriginalString);

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 65 "..\..\ErrorMailHtmlPage.cshtml"
                                                                            Write(ErrorLogEntry.Id);

            
            #line default
            #line hidden
WriteLiteral("</a>");


            
            #line 65 "..\..\ErrorMailHtmlPage.cshtml"
                                                                                                      }
                                         else {
            
            #line default
            #line hidden
            
            #line 66 "..\..\ErrorMailHtmlPage.cshtml"
                                          Write(ErrorLogEntry.Id);

            
            #line default
            #line hidden
            
            #line 66 "..\..\ErrorMailHtmlPage.cshtml"
                                                                }
            
            #line default
            #line hidden
WriteLiteral("</strong>.\r\n</p>\r\n");


            
            #line 68 "..\..\ErrorMailHtmlPage.cshtml"
    }

            
            #line default
            #line hidden

            
            #line 69 "..\..\ErrorMailHtmlPage.cshtml"
     if (error.Detail.Length != 0)
    {
        // NOTE! DO NOT REMOVE Razor comments below designed to eliminate
        // white space literals that can affect output and formatting.


            
            #line default
            #line hidden
WriteLiteral("        <table\r\n            style=\"border-collapse: collapse; border-spacing: 0; " +
"border: none; width: 100%\"\r\n            border=\"0\" width=\"100%\" cellpadding=\"10\"" +
" cellspacing=\"0\">\r\n            <tr style=\"background-color: #FFFFCC;\">");



WriteLiteral("<td valign=\"top\" style=\"vertical-align: top\" bgcolor=\"#FFFFCC\">");



WriteLiteral("<pre style=\"margin: 0; padding: 0\"><code id=\"detail\" style=\"font-size: x-small;\">" +
"");


            
            #line 79 "..\..\ErrorMailHtmlPage.cshtml"
                                                                                          Write(Html(MarkupStackTrace(error.Detail)));

            
            #line default
            #line hidden
WriteLiteral("</code></pre>");



WriteLiteral("</td>");



WriteLiteral("</tr>\r\n        </table>\r\n");


            
            #line 83 "..\..\ErrorMailHtmlPage.cshtml"
    }

            
            #line default
            #line hidden

            
            #line 84 "..\..\ErrorMailHtmlPage.cshtml"
     foreach (var collection in
        from collection in new[]
        {
            new
            {
                Id     = "vars",
                Title  = "Server Variables",
                Items  = error.ServerVariables,
                Filter = Options.ServerVariablesSelector,
            }
        }
        let data = collection.Items
        where data != null && data.Count > 0
        let items = from e in (collection.Filter ?? DiagnosticsCollectionSelectors.PassThru)(data.AsEnumerable())
                    where Options.DontSkipEmptyKeys || !string.IsNullOrEmpty(e.Value)
                    select e
        select new
        {
            collection.Id,
            collection.Title,
            Items = items.OrderBy(e => e.Key, StringComparer.OrdinalIgnoreCase)
                         .Select((e, i) => new { Pos = i + 1, e.Key, e.Value, })
                         .ToArray(),
        }
        into collection
        where collection.Items.Length > 0
        select collection
    )
    {
        const string tdStyle = "font-size: x-small; border-top: 1px solid #ddd; border-bottom: 1px solid #ddd; padding: 8px";
        const string thStyle = tdStyle + "; text-align: left; font-weight: bold;";


            
            #line default
            #line hidden
WriteLiteral("        <div id=\"");


            
            #line 116 "..\..\ErrorMailHtmlPage.cshtml"
            Write(collection.Id);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n            <h1 style=\"font-size: small;\">");


            
            #line 117 "..\..\ErrorMailHtmlPage.cshtml"
                                     Write(collection.Title);

            
            #line default
            #line hidden
WriteLiteral(" (");


            
            #line 117 "..\..\ErrorMailHtmlPage.cshtml"
                                                        Write(collection.Items.Length.ToString("N0"));

            
            #line default
            #line hidden
WriteLiteral(")</h1>\r\n            <table style=\"");


            
            #line 118 "..\..\ErrorMailHtmlPage.cshtml"
                     Write(fontStyle);

            
            #line default
            #line hidden
WriteLiteral("; border-collapse:collapse; border-spacing: 0; border: none; width: 100%\"\r\n      " +
"          border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n                <tr valig" +
"n=\"top\" style=\"vertical-align: top;\">\r\n                    <th style=\"");


            
            #line 121 "..\..\ErrorMailHtmlPage.cshtml"
                          Write(thStyle);

            
            #line default
            #line hidden
WriteLiteral("; text-align: right\">#</th>\r\n                    <th style=\"");


            
            #line 122 "..\..\ErrorMailHtmlPage.cshtml"
                          Write(thStyle);

            
            #line default
            #line hidden
WriteLiteral("\">Name</th>\r\n                    <th style=\"");


            
            #line 123 "..\..\ErrorMailHtmlPage.cshtml"
                          Write(thStyle);

            
            #line default
            #line hidden
WriteLiteral("\">Value</th>\r\n                </tr>\r\n");


            
            #line 125 "..\..\ErrorMailHtmlPage.cshtml"
                 foreach (var item in collection.Items)
                {
                    var zebra = item.Pos % 2 == 1
                              ? "background-color: #f9f9f9"
                              : string.Empty;


            
            #line default
            #line hidden
WriteLiteral("                    <tr valign=\"top\" style=\"vertical-align: top; ");


            
            #line 131 "..\..\ErrorMailHtmlPage.cshtml"
                                                            Write(zebra);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                        <td style=\"");


            
            #line 132 "..\..\ErrorMailHtmlPage.cshtml"
                              Write(tdStyle);

            
            #line default
            #line hidden
WriteLiteral("; text-align: right\">");


            
            #line 132 "..\..\ErrorMailHtmlPage.cshtml"
                                                           Write(item.Pos);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <th style=\"");


            
            #line 133 "..\..\ErrorMailHtmlPage.cshtml"
                              Write(thStyle);

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 133 "..\..\ErrorMailHtmlPage.cshtml"
                                        Write(item.Key);

            
            #line default
            #line hidden
WriteLiteral("</th>\r\n                        <td style=\"");


            
            #line 134 "..\..\ErrorMailHtmlPage.cshtml"
                              Write(tdStyle);

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 134 "..\..\ErrorMailHtmlPage.cshtml"
                                        Write(item.Value);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    </tr>\r\n");


            
            #line 136 "..\..\ErrorMailHtmlPage.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </table>\r\n        </div>\r\n");


            
            #line 139 "..\..\ErrorMailHtmlPage.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <p>\r\n        This e-mail was brought to you by\r\n        <a href=\"https://elma" +
"h.github.io/\">ELMAH</a> (");


            
            #line 142 "..\..\ErrorMailHtmlPage.cshtml"
                                                  Write(About<Error>.Version);

            
            #line default
            #line hidden
WriteLiteral("),\r\n        <a href=\"https://github.com/elmah/Bootstrapper\">ELMAH Bootstrapper</a" +
"> (");


            
            #line 143 "..\..\ErrorMailHtmlPage.cshtml"
                                                                            Write(About<Elmah.Bootstrapper.HttpModuleInitializingEventArgs>.Version);

            
            #line default
            #line hidden
WriteLiteral(")\r\n        &amp; ELMAH Fabmail (");


            
            #line 144 "..\..\ErrorMailHtmlPage.cshtml"
                         Write(About<Elmah.Fabmail.ErrorTextFormatter>.Version);

            
            #line default
            #line hidden
WriteLiteral(").\r\n        Copyright &copy; 2004, Atif Aziz. All rights reserved.\r\n        Licen" +
"sed under <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">Apache License, V" +
"ersion 2.0</a>.\r\n    </p>\r\n</body>\r\n</html>\r\n");


        }
    }
}
#pragma warning restore 1591
